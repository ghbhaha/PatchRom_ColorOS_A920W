*** /home/suda/color2.0/device/temp/android_smali/./services.jar.out/smali/com/android/server/VibratorService.smali	2014-05-01 23:28:56.000000000 +0800
--- ./services.jar.out/smali/com/android/server/VibratorService.smali	2014-05-01 23:29:11.000000000 +0800
***************
*** 1105,1131 ****
      .parameter "pattern"
      .parameter "repeat"
      .parameter "token"
  
      .prologue
-     iget-object v1, p0, Lcom/android/server/VibratorService;->mContext:Landroid/content/Context;
- 
-     const-string v2, "android.permission.VIBRATE"
- 
-     invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I
- 
-     move-result v1
- 
-     if-eqz v1, :cond_0
- 
-     new-instance v1, Ljava/lang/SecurityException;
- 
-     const-string v2, "Requires VIBRATE permission"
- 
-     invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
- 
-     throw v1
- 
-     :cond_0
      invoke-static {}, Landroid/os/Binder;->getCallingUid()I
  
      move-result v5
--- 1105,1117 ----
      .parameter "pattern"
      .parameter "repeat"
      .parameter "token"
+     .annotation build Landroid/annotation/OppoHook;
+         level = .enum Landroid/annotation/OppoHook$OppoHookType;->CHANGE_CODE:Landroid/annotation/OppoHook$OppoHookType;
+         note = "Jun.Zhang@Plf.Framework, not check permission here, check permission in OppoVibratorService!!"
+         property = .enum Landroid/annotation/OppoHook$OppoRomType;->ROM:Landroid/annotation/OppoHook$OppoRomType;
+     .end annotation
  
      .prologue
      invoke-static {}, Landroid/os/Binder;->getCallingUid()I
  
      move-result v5
***************
*** 1136,1169 ****
      move-result-wide v7
  
      .local v7, identity:J
!     if-eqz p1, :cond_1
  
      :try_start_0
      array-length v1, p1
  
!     if-eqz v1, :cond_1
  
      invoke-direct {p0, p1}, Lcom/android/server/VibratorService;->isAll0([J)Z
  
      move-result v1
  
!     if-nez v1, :cond_1
  
      array-length v1, p1
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_1
  
!     if-ge p2, v1, :cond_1
  
!     if-nez p3, :cond_2
  
!     :cond_1
      :goto_0
      invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
  
      return-void
  
!     :cond_2
      :try_start_1
      new-instance v0, Lcom/android/server/VibratorService$Vibration;
  
--- 1122,1155 ----
      move-result-wide v7
  
      .local v7, identity:J
!     if-eqz p1, :cond_0
  
      :try_start_0
      array-length v1, p1
  
!     if-eqz v1, :cond_0
  
      invoke-direct {p0, p1}, Lcom/android/server/VibratorService;->isAll0([J)Z
  
      move-result v1
  
!     if-nez v1, :cond_0
  
      array-length v1, p1
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_1
  
!     if-ge p2, v1, :cond_0
  
!     if-nez p3, :cond_1
  
!     :cond_0
      :goto_0
      invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
  
      return-void
  
!     :cond_1
      :try_start_1
      new-instance v0, Lcom/android/server/VibratorService$Vibration;
  
***************
*** 1200,1206 ****
  
      invoke-direct {p0}, Lcom/android/server/VibratorService;->doCancelVibrateLocked()V
  
!     if-ltz p2, :cond_3
  
      iget-object v1, p0, Lcom/android/server/VibratorService;->mVibrations:Ljava/util/LinkedList;
  
--- 1186,1192 ----
  
      invoke-direct {p0}, Lcom/android/server/VibratorService;->doCancelVibrateLocked()V
  
!     if-ltz p2, :cond_2
  
      iget-object v1, p0, Lcom/android/server/VibratorService;->mVibrations:Ljava/util/LinkedList;
  
***************
*** 1241,1247 ****
      goto :goto_0
  
      .end local v6           #e:Landroid/os/RemoteException;
!     :cond_3
      :try_start_6
      iput-object v0, p0, Lcom/android/server/VibratorService;->mCurrentVibration:Lcom/android/server/VibratorService$Vibration;
  
--- 1227,1233 ----
      goto :goto_0
  
      .end local v6           #e:Landroid/os/RemoteException;
!     :cond_2
      :try_start_6
      iput-object v0, p0, Lcom/android/server/VibratorService;->mCurrentVibration:Lcom/android/server/VibratorService$Vibration;
  
